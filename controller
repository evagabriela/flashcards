require 'CSV'

class Deck

  def initialize
    @card_deck_hash
    @temp_deck_hash
  end

  def add_card (word, definition) #adds to card_deck hash
  end

  def shuffle #shuffles card_deck_hash, 
    ## card_deck_hash >> array.shuffle >> temp_deck_hash
  end

  def sample_card # returns word, definition
    #if temp_deck is empty, shuffle card_deck and repopulate temp_deck
  end

end


class Controller

  def input_and_parse_file(filename) #File name MUST BE IN THE SAME DIRECTORY 
    filename_edit = "./" + filename
    file_open = File.open(filename_edit, "r") 
    file_string = file_open.read

    file_array = file_string.split('\n')

      def_array = []
      key_array =[]
      n = 0
      file_array.each_with_index do |string,index| 
        if index == 3*n
            def_array << string
        elsif index == (3 * n) +1
            key_array << string
        end
      end
        @input_file = key_array.zip(def_array)
      
  end


  def populate_deck #sends word and definition strings to Deck.add_card
    @deck_object = Deck.new

    @input_file.each do |string|
      @deck_object.add_card(string[0],string[1])
    end
  end

  def self.control_sequence(txt_filename)
      @input_file = []
      input_and_parse_file(txt_filename)
      populate_deck
      @deck_object
  end

end



class GameMaster

  def initialize(txt_filename)
     @working_deck = Controller.control_sequence(txt_filename)
  end

  def run_game

    #Welcome message
    #
    #first/next card loop
      #guess loop (gets)
      #quit
    #exit message
  end

  def guess

  end

end

GameMaster.new('flashcards.txt')
